Master: t2.medium
Worker1: t2.micro (free)
Worker2: t2.micro (free)

1. Save the .pem file while creating the aws machine.
2. use puttygen and load the pem file and save as private key .ppk file
3. Then, get the public ip and connect using putty. pass the ppk file in SSh->AUTH section (username : centos) connect to master and worker nodes
4. run the below mentioned commands to install docker engine and kubernetes
Install docker from this url:
https://docs.docker.com/install/linux/docker-ce/centos/

Install from this website:
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl

5. Run: hostnamectl set-hostname --static k8smaster in master
6. hostnamectl set-hostname --static k8snode1 (run in worker1)
7. hostnamectl set-hostname --static k8snode2 (run in worker2)
8. Run "vi /etc/cloud/cloud.cfg" and add "preserve_hostname: true" at the end (in master)
9. Run "vi /etc/cloud/cloud.cfg" and add "preserve_hostname: true" at the end (in worker 1 & 2)
10. 


==========================================================================================
[root@ip-172-31-8-5 ~]# history
    1  yum install -y yum-utils   device-mapper-persistent-data   lvm2
    2   yum-config-manager     --add-repo     https://download.docker.com/linux/centos/docker-ce.repo
    3  yum install docker-ce docker-ce-cli containerd.io
    4  service docker start
    5  chkconfig docker on
    6  cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

    7  setenforce 0
    8  sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
    9  yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
   10  systemctl enable --now kubelet
   11  cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

   12  sysctl --system
   13  systemctl daemon-reload
   14  systemctl restart kubelet
   15  history
